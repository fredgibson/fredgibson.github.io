/**
 * JS routines for C2C cookie management. Used in both C2C plugin and the
 * C2C hosting pages.
 * 
 * Author: Richard Zhang
*/
(function(window, undefined) {

	(function() {
		if (window.jQuery === undefined) {
			throw "jQuery not included!";
		}
		if (jQuery.prototype.jquery === undefined) {
			throw "jQuery version not found!";
		}
		usedVer = jQuery.prototype.jquery.split(".");
		if (parseInt(usedVer[0]) < 1 || parseInt(usedVer[1]) < 5) {
			throw "Minimum jQuery version must be 1.5";
		}
		if (jQuery.cookie === undefined) {
			throw "jQuery cookie plugin not included";
		}
	})();
	
	var BnsC2CCookie = {
		version: '1.0',
		
		/**
		 * TODO: need to setup proper domain name between hosting page and C2C site for sharing the cookie
		*/
		cookieDomains: {
			cookieCrossDomain: '.scotiabank.com',
			cookieSolDomain: '.scotiaonline.scotiabank.com'
		},
		cookieProperties: {
			activeChatName: 'C2C.BR.ACTIVE.CHAT',
			activeChatWinSize: 'C2C.BR.CHAT.WIN.SIZE',
			activePopupChatName: 'C2C.BR.POPUP.CHAT',
			activeChatValue: 'T',
			chatWinSizeMin: 'M',
			chatWinSizeMax: 'X',
			siSuspendName: 'C2C.BR.SI.SUSPEND',
			sisSuspendVal: 'T',
			value: null,	/* take values from one of BnsC2CCookie.chatCookieVales */
			domain: '',
			secure: false,
			path: '/'	
		},
		
		prepareCookieProps: function() {
			if (window.location.protocol.indexOf('https') == 0) {
				BnsC2CCookie.cookieProperties.secure = true;
			}
			/*
			if (window.location.hostname.indexOf(BnsC2CCookie.cookieDomain) > 0) {
				BnsC2CCookie.cookieProperties.domain = BnsC2CCookie.cookieDomain;
			} else {
				BnsC2CCookie.cookieProperties.domain = window.location.hostname;
			}
			*/
		},
		
		setCookie: function(cookieName, cookieVal, domain, expireDays) {
			cookieProps = { 
				path: BnsC2CCookie.cookieProperties.path,
				secure: BnsC2CCookie.cookieProperties.secure
			};
			if (domain !== undefined && domain != null) {
				cookieProps.domain = domain;
			}
			if (expireDays && typeof(expireDays) === 'number') {
				cookieProps.expires = expireDays;
			}
			jQuery.cookie(cookieName, cookieVal, cookieProps);
		},
		
		removeCookie: function(cookieName, domain) {
			cookieProps = { 
				path: BnsC2CCookie.cookieProperties.path,
				secure: BnsC2CCookie.cookieProperties.secure,
				expires: -1
			};
			if (domain !== undefined && domain != null) {
				cookieProps.domain = domain;
			}
			jQuery.cookie(cookieName, '', cookieProps);			
		},
		
		getCookieValue: function(cookieName) {
			val = jQuery.cookie(cookieName);
			return val === undefined ? null : val;
		},
		
		getActiveChatCookieDomain: function() {
			return window.location.hostname.indexOf(BnsC2CCookie.cookieDomains.cookieCrossDomain) > 0 ? BnsC2CCookie.cookieDomains.cookieCrossDomain : null;
		},
		
		/**
		 * Pass in nothing (undefined) or null to remove the cookie
		*/
		setActiveChatCookie: function(dcURL) {
			BnsC2CCookie.cookieProperties.activeChatValue = dcURL;
			
			// Plog 859
			BnsC2CCookie.cookieProperties.secure = false;
			
			BnsC2CCookie.setCookie
				(
					BnsC2CCookie.cookieProperties.activeChatName, 
					BnsC2CCookie.cookieProperties.activeChatValue,
					BnsC2CCookie.getActiveChatCookieDomain()
				);
		},
		
		setChatWinSizeCookie: function(isMinimized) {
			BnsC2CCookie.setCookie
			(
				BnsC2CCookie.cookieProperties.activeChatWinSize, 
				isMinimized ? BnsC2CCookie.cookieProperties.chatWinSizeMin : BnsC2CCookie.cookieProperties.chatWinSizeMax,
				BnsC2CCookie.getActiveChatCookieDomain()
			);
		},
		
		setActiveChatInPopupCookie: function() {
			BnsC2CCookie.setCookie
			(
				BnsC2CCookie.cookieProperties.activePopupChatName, 
				BnsC2CCookie.cookieProperties.activeChatValue,
				BnsC2CCookie.getActiveChatCookieDomain()
			);
		},
		
		removeActiveChatCookie: function() {
			BnsC2CCookie.removeCookie(BnsC2CCookie.cookieProperties.activeChatName, BnsC2CCookie.getActiveChatCookieDomain());
		},
		
		removeActiveChatInPopupCookie: function() {
			BnsC2CCookie.removeCookie(BnsC2CCookie.cookieProperties.activePopupChatName, BnsC2CCookie.getActiveChatCookieDomain());
		},
		
		removeChatWinSizeCookie: function() {
			BnsC2CCookie.removeCookie(BnsC2CCookie.cookieProperties.activeChatWinSize, BnsC2CCookie.getActiveChatCookieDomain());
		},
		
		removeChatCookies: function() {
			BnsC2CCookie.removeActiveChatCookie();
			BnsC2CCookie.removeChatWinSizeCookie();
		},
		
		getSISuspendedCookieDomain: function() {
			return window.location.hostname.indexOf(BnsC2CCookie.cookieDomains.cookieSolDomain) > 0 ? BnsC2CCookie.cookieDomains.cookieSolDomain : null;
		},
		
		setSISuspendedCookie: function(expireDays) {
			BnsC2CCookie.setCookie
				(
					BnsC2CCookie.cookieProperties.siSuspendName, 
					BnsC2CCookie.cookieProperties.sisSuspendVal,
					BnsC2CCookie.getSISuspendedCookieDomain(),
					expireDays
				);
		},
		
		getActiveChatCookieVal: function() {
			return BnsC2CCookie.getCookieValue(BnsC2CCookie.cookieProperties.activeChatName);
		},
		
		getActiveChatInPopupCookieVal: function() {
			return BnsC2CCookie.getCookieValue(BnsC2CCookie.cookieProperties.activePopupChatName);
		},
		
		getChatWinSizeCookieVal: function() {
			sizeVal = BnsC2CCookie.getCookieValue(BnsC2CCookie.cookieProperties.activeChatWinSize);
			return sizeVal == null ? BnsC2CCookie.cookieProperties.chatWinSizeMax : sizeVal;
		},
		
		isChatWinMinimized: function() {
			return BnsC2CCookie.getChatWinSizeCookieVal() === BnsC2CCookie.cookieProperties.chatWinSizeMin;
		},
		
		hasActiveChat: function() {
			cookieVal = BnsC2CCookie.getActiveChatCookieVal();
			//return cookieVal != null && cookieVal == BnsC2CCookie.cookieProperties.activeChatValue;
			return cookieVal && cookieVal != null && cookieVal.length > 0;
		},
		
		hasActiveChatInPopup: function() {
			cookieVal = BnsC2CCookie.getActiveChatInPopupCookieVal();
			return cookieVal != null && cookieVal == BnsC2CCookie.cookieProperties.activeChatValue;
		},
		
		hasSIChatSuspended: function() {
			cookieVal = BnsC2CCookie.getCookieValue(BnsC2CCookie.cookieProperties.siSuspendName);
			return cookieVal !=null && cookieVal === BnsC2CCookie.cookieProperties.sisSuspendVal;
		},
		
		hookDocReady: function() {
			jQuery(document).ready(function() {
				BnsC2CCookie.prepareCookieProps();
			});
		}
	};
	
	(function() {
		window.BnsC2CCookie = BnsC2CCookie;
		BnsC2CCookie.hookDocReady();
	})();
	
})(window);
